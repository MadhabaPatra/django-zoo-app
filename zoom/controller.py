# This file is brain of the application

# This file controlls every request to the zoom api

import json
import urllib.parse
from django.shortcuts import redirect

import requests

# Endpoints
from zoom.constant import ZOOM_ACCESS_TOKEN_URL, ZOOM_AUTH_URL, ZOOM_CREATE_MEETING_ENDPOINT, ZOOM_GET_USER_ENDPOINT

# Zoom Client credentials
from zoo.settings import CLIENT_ID, CLIENT_REDIRECT, CLIENT_SECRET

# 
def GetAuthorizationUrl():
    return ZOOM_AUTH_URL.format(CLIENT_ID,CLIENT_REDIRECT)
    
# Create access token using authorization code
def GetAccessToken(request):

    # Authorization code generated by zoom server
    authorizationCode=request.GET.get('code', '')

    # Generate token url endpoint
    tokenUrl=ZOOM_ACCESS_TOKEN_URL.format(authorizationCode,urllib.parse.quote(CLIENT_REDIRECT))

    # Send request to the endpoint
    response = requests.post(tokenUrl, auth=(CLIENT_ID, CLIENT_SECRET))

    try:
        data = response.json()
        return data,response.status_code

    except:
        return {"message":"Failed to get access token"},401


# Get user details
def GetUserDetails(request):

    # Get Acccess Token 
    accessToken=request.GET.get('accesstoken', '')

    # User Details endpoint url
    userDetailsUrl=ZOOM_GET_USER_ENDPOINT

    # Request Header
    headers = {"Authorization": "Bearer {0}".format(accessToken)}

    # Send request to the endpoint
    response = requests.get(userDetailsUrl, headers=headers)

    try:
        data = response.json()
        data["accesstoken"]=accessToken
        return data,response.status_code

    except:
        return {"reason":"Failed to get user details"},401

# Create a meeting wrt the request
def CreateMeeting(request):

    # Get Acccess Token 
    try:
        accessToken=request.POST['accesstoken']
    except:
        return {"reason":"Invalid access token"},401


    # Meeting Topic 
    topic=request.POST['topic']


    # Generate token url endpoint
    meetingCreateUrl=ZOOM_CREATE_MEETING_ENDPOINT

    # Request Header
    headers = {"Authorization": "Bearer {0}".format(accessToken),'Accept':"*",'Content-type': 'application/json'}

    # Context
    data= json.dumps({"topic":topic})

    # Send request to the endpoint
    response = requests.post(meetingCreateUrl, headers=headers,data=data)

    try:
        data = response.json()
        return data,response.status_code

    except:
        return {"reason":"Failed to create meeting now."},401

# Redirect to error page if application requires
def RedirectToErrorPage(message):
    return redirect('/error?message={0}'.format(message))